(21.03.11)
- 21.02.24~03.10 까지의 PIMS 업무 요청 사항 정리.

원서 교육 강희건PD님
원서접수는 우리 회사에서 가장 주된 사업중 하나로 제공해주는 여러 서비스가 포함된다.
- 경쟁률
- 자기소개서
- 추천서
- 출력 (알바를 쓰는 경우가 있으나 개발자들이 해야할 때도 있음)

개발환경
- Javascript (frontend)
- C#(ASP.Net)
- MSSQL

버전에는 V9,10 과 V8이 있다.

1. V9,10의 경우
  1) 파일(패키지에서 만들어줌)
    - script 2개 
    대학ID_A파일  : 설정세팅과 연관된 파일. 따로 건드릴 경우 없음
    대학ID_AU파일 : 수정해야할 때 사용하는 파일

    - 페이지 3개
    A.html  : 패키지 자동 생성 (수정x)
    A.aspx  : 작성 페이지와 연관된 파일
    AC.aspx : 작성 확인(Confirm) 페이지

  * DB서버
  DEV   -   TEST   -  REAL
  개발      운영자    학생들
  권한이 TEST까지 밖에 없음.

  * 개발 작업은 Local에서 해줄 것.

  2) Local 다운로드 방법
  패키지에서 univservice id 검색
  -> 대학 선택
  
  상위 메뉴중 기초데이터 검색
  -> 배포페이지
  -> 페이지 배포 
  다운로드 창에서 univ id 입력한 후 전체 선택하여 로컬복사 클릭하면 됨.
  
  다운로드 타겟 로컬 디렉터리
  D:Projects\NextApp\JinhakNextService\Presentation\JinhakNextWebPage\Webappforms\script 혹은 page 에 들어가면
  스크립트면 script 폴더에
  페이지면 page 폴더에 들어가서 확인할 수 있다.

  모두 확인 한 후에는
  패키지에서 univ id 입력하여 원서 바로가기 하여 테스트 할 수 있다.

2. V8 (대학원, 편입)
  - 입력해야하는 정보가 많음
  - Source가 좀더 복잡함.
  U 파일 : Jquery로 작성

  * 테스트 배포 하는 방법
    기초 데이터 관리 -> 배포 테스트 - > 테스트 배포 로컬에서 검색 후 배포 test로 하면 끝

3. DB
  - 기초 데이터
  - 저장 프로시저

  1) 테이블
  대표적인 테이블 알아두어야 할 것들...
    - Application : 원서 테이블
    - Apply(ServiceID)_A,B... : 대학별 테이블
    - Apply Complete : 학생 결제 마쳤을 때. (수험번호가 생김)

    - UnivService : 대학정보 서비스 id, 서비스 시작, 끝 기간
    - ApplyMajor  : 학과 정보 테이블
    - SelectType  : 전형정보 테이블

  *2) Scholartship 학력정보
    1 : 고등학교 졸업예정
    2 : 고등학교 졸업
    3 : 조기졸업
    4 : 검정고시

  *3) 파일서버
    \\applydev : 개발
    \\applytest : 테스트
    \\appweb0 : 리얼

  4) 저장 프로시저
  프로그램 기능> 저장 프로시저 우클릭해서 필터 설정해서 검색해서 확인한다.
  저장프로시저라 함은 명령어 집합을 의미한다.
  패키지에서 만들어준다.
  - AddWonseo_A   : 원서저장 시 dbo.Application에 등록시켜주는 프로시저
  - AddWonseo_AM  : 원서수정 시 update 시켜주는 프로시저
  - GetWonseo_A   : 저장한 원서 불러올 때 사용하는 프로시저
  - T5(ServiceID)(1,2,3..) : 전산파일 저장과 연관된 프로시저

4. 페이지 배포 방법
  * 기초데이터 배포 (db배포)
  * script 실행 (프로시저 수정, 배포)


<21.03.17> 성적산출, 입시상담 앱 교육 (김명수 pd님)
일단 성적산출과 입시상담은 결국 비슷한 프로그램이다.
성적 계산해주는 서비스라고 생각하면 된다.
구조가 복잡하지 않고, html, js 파일 하나씩 정도로 생각하면 된다.

파일 경로는 \\applyteset\nesinSolution\대학번호\학년도\파일명 이런식으로 들어가면 되고 
테스트 서버에서 수정되는 경우도 빈번하다. (올바른 작업방법은 아니지만 간단하게 수정하는 경우가 많기에 그렇게 한다.)
URL은 vapplytest.jinhakapply.com/nesin/.... 위의 uri 참조

내신산출은 학생들이 대학교에 지원할 때 사용하는 서비스이고 저장 기능이 없다.
입학상담앱은 학교에서 박람회 같은 곳에서 학생들 지원 상담해줄 때 사용하는 서비스이다.

학교에서 입시요강이 나오면 그에 맞게 계산해주는 프로그램을 만들면 된다.
보통은 문구 수정이나, 과마다 입시 요강이 바뀌는 경우 수정해준다.(소수점 자리로 인한 이슈가 크다고 함)

링크드 서버를 사용할 수 있다.
주로 쓰는 링크드 서버
- TESTDB1 (테스트 DB 접근 가능)
- DEVINTEG (DEV 접근 가능)

입학상담의 경우 내신산출과 같다고 보면 되는데 특이한것은 BULK라는 파일이 있다. 이는 엑셀을 저장할 때 BULK에 추가된다고 한다.
앱이기 때문에 iOS를 사용해야 하며 맥북으로 접속하여 cordana? 프로그램으로 aspx->java로 구동되게 바꿔준다.
앱으로 배포하여 학교 선생님들이 사용할 수 있게 해준다.


(21.03.19) 패키지 교육 (신동재 pd님)

1. 패키지에는 v8, v9, v10 이렇게 3가지가 있다.
  v8 - 일반원서, v9,10 - 공통원서

2. 기본적으로 운영팀에서 진행하다가 필요할 때 예외처리와 같은 일을 진행하게 된다.
  운영팀에서 하는 일들도 어느 정도 알아두어야 한다.
  - 기본적으로 원서의 데이터 정보를 분석해야 한다.
  (내부망) jhfs>진학파일서버>부서별폴더>ApplyService본부>개발부>서비스파트>매뉴얼>원서접수 들어가 엑셀파일을 확인하면 알 수있음
  - 엑셀파일이 만들어졌으면 패키지 프로그램을 사용하여 데이터 업로드를 진행한다.
  - 화면 필드 및 특이사항 정보 세팅

3. 원서 접수 자료처리 흐름
  1) 원서 작성/수정 <-> 원서 결제 <-> 원서 결제 취소
  2) 원서 결제 중. 예외처리 진행
  - 전형료
  - 중복처리
  - 0원 결제
  - 그 외 처리 사항 
  3) 결제 버튼 클릭시 
  - 중복 다시 체크
  - 수험번호, 일련번호 만듬
  4) 결제 확인 창에서 결제 확인, 수험번호 확인
  5) 원서, 수험표 대학관리자 페이지 출력확인

4. 사용하는 파일의 종류
  - script 2개 
  대학ID_A파일  : 설정세팅과 연관된 파일. 따로 건드릴 경우 없음
  대학ID_AU파일 : 수정해야할 때 사용하는 파일

  - 페이지 2개
  -.aspx  : 작성 페이지와 연관된 파일
  -C.aspx : 작성 확인(Confirm) 페이지

  - 저장 프로시저
    AddWonseo_A   : 원서저장 시 dbo.Application에 등록시켜주는 프로시저
    AddWonseo_AM  : 원서수정 시 update 시켜주는 프로시저
    GetWonseo_A   : 저장한 원서 불러올 때 사용하는 프로시저
    T5(ServiceID)(1,2,3..) : 전산파일 저장과 연관된 프로시저

  - oz 관련 파일
  - 테이블 

5. 페이지 배포
  * 기초데이터 배포 (db배포)
  * script 실행 (프로시저 수정, 배포)
    